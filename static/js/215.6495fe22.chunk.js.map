{"version":3,"file":"static/js/215.6495fe22.chunk.js","mappings":"0QAIaA,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAAC,KAAD,CAAMD,GAAIA,EAAIE,UAAU,WAAxB,WACE,SAAC,MAAD,CAAaC,KAAK,OACjBF,IAGN,ECRYG,EAAmB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAEtE,OAEI,4BACI,iBAAKR,UAAU,YAAf,WAEI,gBAAKA,UAAU,iBAAf,UACI,gBAAKS,IAAG,yCAAoCD,GAAUE,IAAKP,OAG/D,iBAAKH,UAAU,kBAAf,WACI,0BAAKG,EAAL,KAAcC,EAAKO,MAAM,EAAG,GAA5B,QACA,wCACiBN,EAAOO,QAAQ,OAEhC,sCACA,uBAAIN,KACJ,oCACA,eAAIN,UAAU,SAAd,SACKO,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACR,eAAaf,UAAU,aAAvB,SAAqCc,GAA5BC,EADD,aAOxB,iBAAKf,UAAU,iBAAf,WACI,mDACA,2BACI,yBACI,SAAC,KAAD,CAAMF,GAAG,OAAOE,UAAU,qBAA1B,qBAEJ,yBACI,SAAC,KAAD,CAAMF,GAAG,UAAUE,UAAU,qBAA7B,+BAOvB,ECrCYgB,EAAe,WAAO,IAAD,IACxBD,GAAOE,EAAAA,EAAAA,MAAPF,GACFG,GAAQC,EAAAA,EAAAA,IAAaJ,GAErBK,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOrB,EAAP,KAAcsB,EAAd,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,GAArC,eAAOnB,EAAP,KAAeuB,EAAf,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOlB,EAAP,KAAiBuB,EAAjB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeuB,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeuB,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAERd,EACGe,MAAK,SAACC,GAAD,OAAcA,EAASC,IAAvB,IACLF,MAAK,SAAAf,GACJO,EAASP,EAAMkB,gBACfT,EAAeT,EAAMmB,cACrBT,EAAUV,EAAMoB,cAChBT,EAAYX,EAAMZ,UAClBwB,GAAU,OAAIZ,EAAMX,SACpBwB,EAAUb,EAAMqB,YACjB,IACAC,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,EAAQ,GAEzC,GAAE,CAACvB,KAGF,6BACE,SAACrB,EAAD,CAAUC,GAAIsB,EAAd,sBAEA,SAAClB,EAAD,CACEC,MAAOA,EACPY,GAAIA,EACJX,KAAMsB,EACNrB,OAAQA,EACRC,SAAUA,EACVC,OAAQA,EACRC,OAAQA,KAGV,SAAC,EAAAoC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/BackLink/BackLink.jsx","components/MovieInformation/MovieInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport './BackLink.styled.css'\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <Link to={to} className='BackLink'>\n      <HiArrowLeft size=\"15\" />\n      {children}\n    </Link>\n  );\n};","import { Link } from 'react-router-dom';\nimport './MovieInformation.styled.css'\n   \nexport const MovieInformation = ({ title, year, rating, overview, genres, poster }) => {\n\n    return (\n\n        <div>\n            <div className=\"MovieInfo\">\n\n                <div className=\"MovieInfo_left\">\n                    <img src={`https://image.tmdb.org/t/p/w400${poster}`} alt={title} />\n                </div>\n\n                <div className=\"MovieInfo_right\">\n                    <h2>{title} ({year.slice(0, 4)})</h2>\n                    <p>\n                        User score: {rating.toFixed(1)}\n                    </p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <ul className='Genres'>\n                        {genres.map(({ name, id }) => (\n                            <li key={id} className='GenresItem'>{name}</li>\n                        ))}</ul>\n                </div>\n            \n            </div>\n\n            <div className=\"AdditionalInfo\">\n                <p>Additional information</p>\n                <ul>\n                    <li>\n                        <Link to=\"cast\" className='AdditionalInfoLink'>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\" className='AdditionalInfoLink'>Reviews</Link>\n                    </li>\n                </ul>\n            </div>\n         \n        </div>\n    );\n};","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { getMovieById } from \"ServiceAPI\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { MovieInformation } from \"components/MovieInformation/MovieInformation\";\n\n\nexport const MovieDetails = () => {\n  const { id } = useParams();\n  const movie = getMovieById(id);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n\n  const [title, setTitle] = useState('');\n  const [releaseYear, setReleaseYear] = useState('');\n  const [rating, setRating] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [poster, setposter] = useState('');\n\n  useEffect(() => {\n\n    movie\n      .then((response) => response.data)\n      .then(movie => {\n        setTitle(movie.original_title)\n        setReleaseYear(movie.release_date)\n        setRating(movie.vote_average)\n        setOverview(movie.overview)\n        setGenres([...movie.genres])\n        setposter(movie.poster_path)\n      })\n      .catch(error => { console.log(error) });\n\n  }, [movie]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n\n      <MovieInformation\n        title={title}\n        id={id}\n        year={releaseYear}\n        rating={rating}\n        overview={overview}\n        genres={genres}\n        poster={poster}\n      />\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};"],"names":["BackLink","to","children","className","size","MovieInformation","title","year","rating","overview","genres","poster","src","alt","slice","toFixed","map","name","id","MovieDetails","useParams","movie","getMovieById","backLinkHref","useLocation","state","from","useState","setTitle","releaseYear","setReleaseYear","setRating","setOverview","setGenres","setposter","useEffect","then","response","data","original_title","release_date","vote_average","poster_path","catch","error","console","log","Suspense","fallback"],"sourceRoot":""}