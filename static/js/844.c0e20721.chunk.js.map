{"version":3,"file":"static/js/844.c0e20721.chunk.js","mappings":"kQAKaA,EAAO,WAEhB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAG,gHAEaC,EAAAA,EAAAA,IAAYP,GAFzB,gBAEFQ,EAFE,EAEFA,KACRJ,EAAQI,EAAKL,MAHH,gDAKVM,QAAQC,MAAR,MALU,yDAAH,qDASfJ,GAEH,GAAE,CAACN,KAGA,gCACI,eAAIW,UAAU,WAAd,SACKR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACN,gBAAkBL,UAAU,WAA5B,WACI,gBAAKM,IAAG,yCAAoCD,GAAgBE,IAAKJ,KACjE,iBAAKH,UAAU,uBAAf,WACI,uBAAIG,KACJ,wCAAgBC,UAJfF,EADH,OAUZV,EAAKgB,SAAU,yFAG5B,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCastById } from \"ServiceAPI\";\nimport './Cast.styled.css'\n\nexport const Cast = () => {\n\n    const { id } = useParams();\n    const [cast, setCast] = useState([]);\n \n    useEffect(() => {\n\n        const fetchCast = async () => {\n            try {\n                const { data } = await getCastById(id);\n                setCast(data.cast)\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchCast();\n\n    }, [id]);\n    \n    return (\n        <section>\n            <ul className=\"CastList\">\n                {cast.map(({ cast_id, name, character, profile_path }) => (\n                    <li key={cast_id} className=\"CastItem\">\n                        <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={name} />\n                        <div className=\"CastItem_description\">\n                            <p>{name}</p>\n                            <p> Character: {character}</p>\n                        </div>\n                    </li>\n                ))}</ul>\n            \n            {!cast.length && <p>We don't have any information about the cast of this movie.</p>}\n        </section>\n    );\n};"],"names":["Cast","id","useParams","useState","cast","setCast","useEffect","fetchCast","getCastById","data","console","error","className","map","cast_id","name","character","profile_path","src","alt","length"],"sourceRoot":""}