{"version":3,"file":"static/js/186.fdff76cd.chunk.js","mappings":"oQAIaA,EAAU,WAEnB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAY,mCAAG,gHAEUC,EAAAA,EAAAA,IAAeP,GAFzB,gBAELQ,EAFK,EAELA,KACRJ,EAAWI,EAAKC,SAHH,gDAKbC,QAAQC,MAAR,MALa,yDAAH,qDASlBL,GAEH,GAAE,CAACN,KAGA,gCACI,wBACKG,EAAQS,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaD,MACb,uBAAIC,MAFCd,EADA,OAOfG,EAAQY,SAAU,uEAG/B,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsById } from \"ServiceAPI\";\n\nexport const Reviews = () => {\n\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n    \n    useEffect(() => {\n\n        const fetchReviews = async () => {\n            try {\n                const { data } = await getReviewsById(id);\n                setReviews(data.results)\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchReviews();\n\n    }, [id]);\n\n    return (\n        <section>\n            <ul>\n                {reviews.map(({ id, author, content }) => (\n                    <li key={id}>\n                        <h4>Author: {author}</h4>\n                        <p>{content}</p>\n                    </li>\n                ))}</ul>\n          \n            {!reviews.length && <p>We don't have any reviews for this movie.</p>}\n        </section>\n    );\n};"],"names":["Reviews","id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviewsById","data","results","console","error","map","author","content","length"],"sourceRoot":""}